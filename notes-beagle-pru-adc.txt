January 30, 2019
Notes on using ADC with PRU.

1. Starting with 
init_adc() and read_adc(chan) from
/usr/lib/ti/pru-software-support-package/examples/am335x/PRU_ADC

which are added to main_pru0.c

2. changed code to read from channels 0 to 3.

Using read_adc(0) seem to get multiple channels.
maybe need to disable other channels so it doesn't get in FIFO?


not consistent, reading chan 0 to 3 instead of just 0...

Need to empty FIFO?


With Chan0=1.8, and Chan 1=0.0, get:
fff        0      83b      636      fff        0      63b      602 
or 
 0      fff        0      83a      627      fff        0      639      5fb    
With Chan0=0 and Chan 1=1.8, get:
fff        0      fff      f9a      96b        0      fff      f98 
or
fff        0      fff      f9d      96d        0      fff      f97      baf  

3. Are STEPENABLE ever set to zero? Maybe extra channels are turned on?
   ADC_TSC.STEPENABLE_bit.STEP1 
Add reset of STEPENABLE to init_adc()?
#include <sys_tscAdcSs.h>  // touch screen A/D?
/usr/lib/ti/pru-software-support-package/include
added:
ADC_TSC.STEPENABLE = ADC_TSC.STEPENABLE & 0xfffe0000;

Still reads 4 channels...

Maybe runs anyway?

4. in init_adc(), set each step to point to chan 0.
==> works to read just channel 0.

5. Speed very low
AtoD buffer 1e3 reads. Takes: 9,428,088us (this is 9 ms per 128 bytes!)

6. Try removing averaging from A/D read.
AtoD buffer 1e3 reads. Takes: 6,004,066us (this is 6 ms per 128 bytes!)

7. Is FIFO not empty when first read?

Note: file.map shows address of constants such as PRU_SHAREDMEM
.text shows start for each function
                0x00000278    00000094     main_pru0.object (.text:read_adc)

uint32_t count = ADC_TSC.FIFO0COUNT;
gives count=4, (maybe because each a/d read from step is in FIFO?)
prudbg break at 
LBBO      &r0, r1, 228, 4 (loads r0 from ADC_TSC base + 0xe4 = FIFO0COUNT) 
br 0 0xa0

228=0xe4

switch(adc_chan) is executing all cases????
missing break!

got 5 reads in FIFO by time it got to 
while (ADC_TSC.FIFO0COUNT == 0) line

8. switch statement does not compile correctly!
Recompile to use only channel0!

still quite slow...

9. Change openDelay and Sample Delay to be 0x01 (should be set by reset to 0)
   ADC_TSC.STEPDELAY1_bit.OPENDELAY = 0x01;
   ADC_TSC.STEPDELAY1_bit.SAMPLEDELAY = 0x01;
AtoD buffer 1e3 reads. Takes: 1085136us
6X faster.

Changed to delay 16 clock cycles, now 17 us/conversion
AtoD buffer 1e3 reads. Takes: 2178175us

OPENDELAY = 0x010;  SAMPLEDELAY = 0x0;
AtoD buffer 1e3 reads. Takes: 1561404us 12.2 us

OPENDELAY = 0x0; SAMPLEDELAY = 0x0;
AtoD buffer 1e3 reads. Takes: 1018944us 7.9 us

10. Now need to add clock output to drive camera
Use servo channel 8.

Clear SYSCFG[STANDBY_INIT] to enable OCP master port

how to access this in C so don't need to do initialization in assembly?
#include <pru_cfg.h>
CT_CFG.SYSCFG_bit.STANDBY_INIT =0;
-----------------------
11.  How to access r30 from c language?
/usr/lib/ti/pru-software-support-package/examples/am335x
__r30

c programming manual
http://www.ti.com/lit/ug/spruhv7b/spruhv7b.pdf
5.7.2 Global Register Variables

CH8BIT should be r30_5

12. setting delay using: __delay_cycles(100000000);?


13. ERROR in rc_encoder_pru_init, am335x-pru0-rc-encoder-fw failed to load
attempting to stop PRU0
==>Fixed by rebooting/resetting CPU. Something got wedged???

14. How are output pins set for rc_test_servo?

maybe something got set, try reset...
src/pru/pru.c: int rc_pru_start(int ch, const char* fw_name)
src/pru/servo.c: calls rc pru start. only GPIO set is for power enable

==> pins may be set by kernel???

config-pin $pin pruout
config-pin -q $pin
config-pin -i P8_27

The internal pinmuxing is programmable through the PIN_MX 

union {
                volatile uint32_t PIN_MX;

                volatile struct {
                        unsigned PIN_MUX_SEL : 8;       // 7:0
                        unsigned rsvd2 : 24;            // 31:8
                } PIN_MX_bit;
        };      //0x40
} pruCfg;

but will also need to set GP output, e.g. from rc_test_servo...

compiler option:
--absolute_listing
Generates a listing with absolute addresses rather than section-relative.

15. 